

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 07 13:02:02 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F870
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	swtext2,local,class=CONST,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	swtext3,local,class=CONST,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F870 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0092                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010E                     	;# 
    97  010F                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000D                     	;# 
   112  000E                     	;# 
   113  000E                     	;# 
   114  000F                     	;# 
   115  0010                     	;# 
   116  0011                     	;# 
   117  0012                     	;# 
   118  0015                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0092                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0092                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190                           
   191                           	psect	idataBANK0
   192  063F                     __pidataBANK0:	
   193                           
   194                           ;initializer for _matriz
   195  063F  3401               	retlw	1
   196  0640  3400               	retlw	0
   197  0641  3402               	retlw	2
   198  0642  3400               	retlw	0
   199  0643  3403               	retlw	3
   200  0644  3400               	retlw	0
   201  0645  3404               	retlw	4
   202  0646  3400               	retlw	0
   203  0647  3405               	retlw	5
   204  0648  3400               	retlw	0
   205  0649  3406               	retlw	6
   206  064A  3400               	retlw	0
   207  064B  3407               	retlw	7
   208  064C  3400               	retlw	0
   209  064D  3408               	retlw	8
   210  064E  3400               	retlw	0
   211  064F  3409               	retlw	9
   212  0650  3400               	retlw	0
   213  0651  3401               	retlw	1
   214  0652  3400               	retlw	0
   215  0653  3400               	retlw	0
   216  0654  3400               	retlw	0
   217  0655  3402               	retlw	2
   218  0656  3400               	retlw	0
   219  0007                     _PORTCbits	set	7
   220  0006                     _PORTB	set	6
   221  0087                     _TRISC	set	135
   222  0086                     _TRISB	set	134
   223                           
   224                           ; #config settings
   225  0000                     
   226                           	psect	cinit
   227  07F4                     start_initialization:	
   228  07F4                     __initialization:	
   229                           
   230                           ; Initialize objects allocated to BANK0
   231  07F4  1383               	bcf	3,7	;select IRP bank0
   232  07F5  3038               	movlw	low (__pdataBANK0+24)
   233  07F6  00FD               	movwf	btemp+-1
   234  07F7  3006               	movlw	high __pidataBANK0
   235  07F8  00FE               	movwf	btemp
   236  07F9  303F               	movlw	low __pidataBANK0
   237  07FA  00FF               	movwf	btemp+1
   238  07FB  3020               	movlw	low __pdataBANK0
   239  07FC  0084               	movwf	4
   240  07FD  260E               	fcall	init_ram0
   241  07FE                     end_of_initialization:	
   242                           ;End of C runtime variable initialization code
   243                           
   244  07FE                     __end_of__initialization:	
   245  07FE  0183               	clrf	3
   246  07FF  2E2A               	ljmp	_main	;jump to C main() function
   247                           
   248                           	psect	dataBANK0
   249  0020                     __pdataBANK0:	
   250  0020                     _matriz:	
   251  0020                     	ds	24
   252                           
   253                           	psect	inittext
   254  060A                     init_fetch0:	
   255                           ;	Called with low address in FSR and high address in W
   256                           
   257  060A  087E               	movf	126,w
   258  060B  008A               	movwf	10
   259  060C  087F               	movf	127,w
   260  060D  0082               	movwf	2
   261  060E                     init_ram0:	
   262                           ;Called with:
   263                           ;	high address of idata address in btemp 
   264                           ;	low address of idata address in btemp+1 
   265                           ;	low address of data in FSR
   266                           ;	high address + 1 of data in btemp-1
   267                           
   268  060E  260A               	fcall	init_fetch0
   269  060F  0080               	movwf	0
   270  0610  0A84               	incf	4,f
   271  0611  0804               	movf	4,w
   272  0612  067D               	xorwf	125,w
   273  0613  1903               	btfsc	3,2
   274  0614  3400               	retlw	0
   275  0615  0AFF               	incf	127,f
   276  0616  1903               	btfsc	3,2
   277  0617  0AFE               	incf	126,f
   278  0618  2E0E               	goto	init_ram0
   279                           
   280                           	psect	cstackCOMMON
   281  0070                     __pcstackCOMMON:	
   282  0070                     ?_print_7_seg:	
   283  0070                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_PORTC_write:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?___bmul:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_PORTC_read:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ___bmul@multiplicand:	
   296                           ; 2 bytes @ 0x0
   297                           
   298  0070                     print_7_seg@i:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     PORTC_read@i:	
   302                           ; 2 bytes @ 0x0
   303                           
   304  0070                     PORTC_write@i:	
   305                           ; 2 bytes @ 0x0
   306                           
   307                           
   308                           ; 2 bytes @ 0x0
   309  0070                     	ds	1
   310  0071                     ??___bmul:	
   311                           
   312                           ; 1 bytes @ 0x1
   313  0071                     	ds	1
   314  0072                     ??_print_7_seg:	
   315  0072                     ??_PORTC_read:	
   316                           ; 1 bytes @ 0x2
   317                           
   318  0072                     ___bmul@product:	
   319                           ; 1 bytes @ 0x2
   320                           
   321  0072                     PORTC_write@v:	
   322                           ; 1 bytes @ 0x2
   323                           
   324                           
   325                           ; 2 bytes @ 0x2
   326  0072                     	ds	1
   327  0073                     ___bmul@multiplier:	
   328                           
   329                           ; 1 bytes @ 0x3
   330  0073                     	ds	1
   331  0074                     ??_PORTC_write:	
   332                           
   333                           ; 1 bytes @ 0x4
   334  0074                     	ds	1
   335  0075                     ?_teclado_matricial_read:	
   336                           
   337                           ; 2 bytes @ 0x5
   338  0075                     	ds	2
   339  0077                     ??_teclado_matricial_read:	
   340                           
   341                           ; 1 bytes @ 0x7
   342  0077                     	ds	3
   343  007A                     teclado_matricial_read@j:	
   344                           
   345                           ; 2 bytes @ 0xA
   346  007A                     	ds	2
   347  007C                     teclado_matricial_read@i:	
   348                           
   349                           ; 2 bytes @ 0xC
   350  007C                     	ds	2
   351  007E                     ??_main:	
   352                           
   353                           	psect	cstackBANK0
   354  0038                     __pcstackBANK0:	
   355                           ; 1 bytes @ 0xE
   356                           
   357  0038                     main@i:	
   358                           
   359                           ; 2 bytes @ 0x0
   360  0038                     	ds	2
   361                           
   362                           	psect	maintext
   363  062A                     __pmaintext:	
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   366 ;;
   367 ;; *************** function _main *****************
   368 ;; Defined at:
   369 ;;		line 12 in file "main.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  i               2    0[BANK0 ] int 
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : B00/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1
   383 ;;      Params:         0       0       0
   384 ;;      Locals:         0       2       0
   385 ;;      Temps:          0       0       0
   386 ;;      Totals:         0       2       0
   387 ;;Total ram usage:        2 bytes
   388 ;; Hardware stack levels required when called:    2
   389 ;; This function calls:
   390 ;;		_print_7_seg
   391 ;;		_teclado_matricial_read
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           
   398                           ;psect for function _main
   399  062A                     _main:	
   400                           
   401                           ;main.c: 14: print_7_seg(0);
   402                           
   403                           ;incstack = 0
   404                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   405  062A  3000               	movlw	0
   406  062B  00F0               	movwf	print_7_seg@i
   407  062C  00F1               	movwf	print_7_seg@i+1
   408  062D                     L1:	
   409  062D  2657               	fcall	_print_7_seg
   410  062E                     l1014:	
   411                           ;main.c: 15: int i;
   412                           ;main.c: 17: while(1){
   413                           
   414                           
   415                           ;main.c: 18: i = teclado_matricial_read();
   416  062E  2762               	fcall	_teclado_matricial_read
   417  062F  0876               	movf	?_teclado_matricial_read+1,w
   418  0630  1283               	bcf	3,5	;RP0=0, select bank0
   419  0631  1303               	bcf	3,6	;RP1=0, select bank0
   420  0632  00B9               	movwf	main@i+1
   421  0633  0875               	movf	?_teclado_matricial_read,w
   422  0634  00B8               	movwf	main@i
   423                           
   424                           ;main.c: 19: if(i != -1)
   425  0635  0A38               	incf	main@i,w
   426  0636  1903               	btfsc	3,2
   427  0637  0A39               	incf	main@i+1,w
   428  0638  1903               	btfsc	3,2
   429  0639  2E2E               	goto	l1014
   430                           
   431                           ;main.c: 20: print_7_seg(i);
   432  063A  0839               	movf	main@i+1,w
   433  063B  00F1               	movwf	print_7_seg@i+1
   434  063C  0838               	movf	main@i,w
   435  063D  00F0               	movwf	print_7_seg@i
   436  063E  2E2D               	goto	L1
   437  063F                     __end_of_main:	
   438                           
   439                           	psect	text1
   440  0762                     __ptext1:	
   441 ;; *************** function _teclado_matricial_read *****************
   442 ;; Defined at:
   443 ;;		line 73 in file "teclado_matricial_4x3.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;  i               2   12[COMMON] int 
   448 ;;  j               2   10[COMMON] int 
   449 ;; Return value:  Size  Location     Type
   450 ;;                  2    5[COMMON] int 
   451 ;; Registers used:
   452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1
   458 ;;      Params:         2       0       0
   459 ;;      Locals:         4       0       0
   460 ;;      Temps:          3       0       0
   461 ;;      Totals:         9       0       0
   462 ;;Total ram usage:        9 bytes
   463 ;; Hardware stack levels used:    1
   464 ;; Hardware stack levels required when called:    1
   465 ;; This function calls:
   466 ;;		_PORTC_read
   467 ;;		_PORTC_write
   468 ;;		___bmul
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           
   475                           ;psect for function _teclado_matricial_read
   476  0762                     _teclado_matricial_read:	
   477                           
   478                           ;teclado_matricial_4x3.c: 75: TRISC = 0xF0;
   479                           
   480                           ;incstack = 0
   481                           ; Regs used in _teclado_matricial_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
   482  0762  30F0               	movlw	240
   483  0763  1683               	bsf	3,5	;RP0=1, select bank1
   484  0764  1303               	bcf	3,6	;RP1=0, select bank1
   485  0765  0087               	movwf	7	;volatile
   486                           
   487                           ;teclado_matricial_4x3.c: 76: int i, j;
   488                           ;teclado_matricial_4x3.c: 77: for(i = 0; i < 5; i++){
   489  0766  01FC               	clrf	teclado_matricial_read@i
   490  0767  01FD               	clrf	teclado_matricial_read@i+1
   491  0768  087D               	movf	teclado_matricial_read@i+1,w
   492  0769  3A80               	xorlw	128
   493  076A  00FF               	movwf	127
   494  076B  3080               	movlw	128
   495  076C  027F               	subwf	127,w
   496  076D  1D03               	skipz
   497  076E  2F71               	goto	u145
   498  076F  3005               	movlw	5
   499  0770  027C               	subwf	teclado_matricial_read@i,w
   500  0771                     u145:	
   501  0771  1803               	btfsc	3,0
   502  0772  2FEF               	goto	l1008
   503  0773                     l982:	
   504                           
   505                           ;teclado_matricial_4x3.c: 78: _delay((unsigned long)((50)*(16000000/4000.0)));
   506  0773  3002               	movlw	2
   507  0774  00F9               	movwf	??_teclado_matricial_read+2
   508  0775  3004               	movlw	4
   509  0776  00F8               	movwf	??_teclado_matricial_read+1
   510  0777  30BA               	movlw	186
   511  0778  00F7               	movwf	??_teclado_matricial_read
   512  0779                     u217:	
   513  0779  0BF7               	decfsz	??_teclado_matricial_read,f
   514  077A  2F79               	goto	u217
   515  077B  0BF8               	decfsz	??_teclado_matricial_read+1,f
   516  077C  2F79               	goto	u217
   517  077D  0BF9               	decfsz	??_teclado_matricial_read+2,f
   518  077E  2F79               	goto	u217
   519  077F  0000               	nop
   520                           
   521                           ;teclado_matricial_4x3.c: 79: PORTC_write(i, 1);
   522  0780  087D               	movf	teclado_matricial_read@i+1,w
   523  0781  00F1               	movwf	PORTC_write@i+1
   524  0782  087C               	movf	teclado_matricial_read@i,w
   525  0783  00F0               	movwf	PORTC_write@i
   526  0784  3001               	movlw	1
   527  0785  00F2               	movwf	PORTC_write@v
   528  0786  3000               	movlw	0
   529  0787  00F3               	movwf	PORTC_write@v+1
   530  0788  2691               	fcall	_PORTC_write
   531                           
   532                           ;teclado_matricial_4x3.c: 80: for(j = 0; j < 3; j++){
   533  0789  01FA               	clrf	teclado_matricial_read@j
   534  078A  01FB               	clrf	teclado_matricial_read@j+1
   535  078B  087B               	movf	teclado_matricial_read@j+1,w
   536  078C  3A80               	xorlw	128
   537  078D  00FF               	movwf	127
   538  078E  3080               	movlw	128
   539  078F  027F               	subwf	127,w
   540  0790  1D03               	skipz
   541  0791  2F94               	goto	u155
   542  0792  3003               	movlw	3
   543  0793  027A               	subwf	teclado_matricial_read@j,w
   544  0794                     u155:	
   545  0794  1803               	btfsc	3,0
   546  0795  2FD6               	goto	l1002
   547  0796                     l992:	
   548                           
   549                           ;teclado_matricial_4x3.c: 81: if(PORTC_read(j+4)){
   550  0796  087A               	movf	teclado_matricial_read@j,w
   551  0797  3E04               	addlw	4
   552  0798  00F0               	movwf	PORTC_read@i
   553  0799  087B               	movf	teclado_matricial_read@j+1,w
   554  079A  1803               	skipnc
   555  079B  3E01               	addlw	1
   556  079C  3E00               	addlw	0
   557  079D  00F1               	movwf	PORTC_read@i+1
   558  079E  26EA               	fcall	_PORTC_read
   559  079F  0870               	movf	?_PORTC_read,w
   560  07A0  0471               	iorwf	?_PORTC_read+1,w
   561  07A1  1903               	btfsc	3,2
   562  07A2  2FC5               	goto	l998
   563                           
   564                           ;teclado_matricial_4x3.c: 82: PORTC_write(i, 0);
   565  07A3  087D               	movf	teclado_matricial_read@i+1,w
   566  07A4  00F1               	movwf	PORTC_write@i+1
   567  07A5  087C               	movf	teclado_matricial_read@i,w
   568  07A6  00F0               	movwf	PORTC_write@i
   569  07A7  3000               	movlw	0
   570  07A8  00F2               	movwf	PORTC_write@v
   571  07A9  00F3               	movwf	PORTC_write@v+1
   572  07AA  2691               	fcall	_PORTC_write
   573                           
   574                           ;teclado_matricial_4x3.c: 83: return matriz[i][j];
   575  07AB  087A               	movf	teclado_matricial_read@j,w
   576  07AC  00F7               	movwf	??_teclado_matricial_read
   577  07AD  3001               	movlw	1
   578  07AE                     u175:	
   579  07AE  1003               	clrc
   580  07AF  0DF7               	rlf	??_teclado_matricial_read,f
   581  07B0  3EFF               	addlw	-1
   582  07B1  1D03               	skipz
   583  07B2  2FAE               	goto	u175
   584  07B3  3006               	movlw	6
   585  07B4  00F8               	movwf	??_teclado_matricial_read+1
   586  07B5  0878               	movf	??_teclado_matricial_read+1,w
   587  07B6  00F0               	movwf	___bmul@multiplicand
   588  07B7  087C               	movf	teclado_matricial_read@i,w
   589  07B8  2619               	fcall	___bmul
   590  07B9  3E20               	addlw	(low (_matriz| 0))& (0+255)
   591  07BA  0777               	addwf	??_teclado_matricial_read,w
   592  07BB  00F9               	movwf	??_teclado_matricial_read+2
   593  07BC  0879               	movf	??_teclado_matricial_read+2,w
   594  07BD  0084               	movwf	4
   595  07BE  1383               	bcf	3,7	;select IRP bank0
   596  07BF  0800               	movf	0,w
   597  07C0  00F5               	movwf	?_teclado_matricial_read
   598  07C1  0A84               	incf	4,f
   599  07C2  0800               	movf	0,w
   600  07C3  00F6               	movwf	?_teclado_matricial_read+1
   601  07C4  0008               	return
   602  07C5                     l998:	
   603  07C5  3001               	movlw	1
   604  07C6  07FA               	addwf	teclado_matricial_read@j,f
   605  07C7  1803               	skipnc
   606  07C8  0AFB               	incf	teclado_matricial_read@j+1,f
   607  07C9  3000               	movlw	0
   608  07CA  07FB               	addwf	teclado_matricial_read@j+1,f
   609  07CB  087B               	movf	teclado_matricial_read@j+1,w
   610  07CC  3A80               	xorlw	128
   611  07CD  00FF               	movwf	127
   612  07CE  3080               	movlw	128
   613  07CF  027F               	subwf	127,w
   614  07D0  1D03               	skipz
   615  07D1  2FD4               	goto	u185
   616  07D2  3003               	movlw	3
   617  07D3  027A               	subwf	teclado_matricial_read@j,w
   618  07D4                     u185:	
   619  07D4  1C03               	skipc
   620  07D5  2F96               	goto	l992
   621  07D6                     l1002:	
   622                           
   623                           ;teclado_matricial_4x3.c: 84: }
   624                           ;teclado_matricial_4x3.c: 85: }
   625                           ;teclado_matricial_4x3.c: 86: PORTC_write(i, 0);
   626  07D6  087D               	movf	teclado_matricial_read@i+1,w
   627  07D7  00F1               	movwf	PORTC_write@i+1
   628  07D8  087C               	movf	teclado_matricial_read@i,w
   629  07D9  00F0               	movwf	PORTC_write@i
   630  07DA  3000               	movlw	0
   631  07DB  00F2               	movwf	PORTC_write@v
   632  07DC  00F3               	movwf	PORTC_write@v+1
   633  07DD  2691               	fcall	_PORTC_write
   634  07DE  3001               	movlw	1
   635  07DF  07FC               	addwf	teclado_matricial_read@i,f
   636  07E0  1803               	skipnc
   637  07E1  0AFD               	incf	teclado_matricial_read@i+1,f
   638  07E2  3000               	movlw	0
   639  07E3  07FD               	addwf	teclado_matricial_read@i+1,f
   640  07E4  087D               	movf	teclado_matricial_read@i+1,w
   641  07E5  3A80               	xorlw	128
   642  07E6  00FF               	movwf	127
   643  07E7  3080               	movlw	128
   644  07E8  027F               	subwf	127,w
   645  07E9  1D03               	skipz
   646  07EA  2FED               	goto	u195
   647  07EB  3005               	movlw	5
   648  07EC  027C               	subwf	teclado_matricial_read@i,w
   649  07ED                     u195:	
   650  07ED  1C03               	skipc
   651  07EE  2F73               	goto	l982
   652  07EF                     l1008:	
   653                           
   654                           ;teclado_matricial_4x3.c: 87: }
   655                           ;teclado_matricial_4x3.c: 88: return -1;
   656  07EF  30FF               	movlw	255
   657  07F0  00F5               	movwf	?_teclado_matricial_read
   658  07F1  30FF               	movlw	255
   659  07F2  00F6               	movwf	?_teclado_matricial_read+1
   660  07F3  0008               	return
   661  07F4                     __end_of_teclado_matricial_read:	
   662                           
   663                           	psect	text2
   664  0619                     __ptext2:	
   665 ;; *************** function ___bmul *****************
   666 ;; Defined at:
   667 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  multiplier      1    wreg     unsigned char 
   670 ;;  multiplicand    1    0[COMMON] unsigned char 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  multiplier      1    3[COMMON] unsigned char 
   673 ;;  product         1    2[COMMON] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      unsigned char 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1
   683 ;;      Params:         1       0       0
   684 ;;      Locals:         2       0       0
   685 ;;      Temps:          1       0       0
   686 ;;      Totals:         4       0       0
   687 ;;Total ram usage:        4 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; This function calls:
   690 ;;		Nothing
   691 ;; This function is called by:
   692 ;;		_teclado_matricial_read
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function ___bmul
   698  0619                     ___bmul:	
   699                           
   700                           ;incstack = 0
   701                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   702                           ;___bmul@multiplier stored from wreg
   703  0619  00F3               	movwf	___bmul@multiplier
   704  061A  01F2               	clrf	___bmul@product
   705  061B                     l926:	
   706  061B  1C73               	btfss	___bmul@multiplier,0
   707  061C  2E21               	goto	l930
   708  061D  0870               	movf	___bmul@multiplicand,w
   709  061E  00F1               	movwf	??___bmul
   710  061F  0871               	movf	??___bmul,w
   711  0620  07F2               	addwf	___bmul@product,f
   712  0621                     l930:	
   713  0621  1003               	clrc
   714  0622  0DF0               	rlf	___bmul@multiplicand,f
   715  0623  1003               	clrc
   716  0624  0CF3               	rrf	___bmul@multiplier,f
   717  0625  0873               	movf	___bmul@multiplier,w
   718  0626  1D03               	btfss	3,2
   719  0627  2E1B               	goto	l926
   720  0628  0872               	movf	___bmul@product,w
   721  0629  0008               	return
   722  062A                     __end_of___bmul:	
   723                           
   724                           	psect	text3
   725  0691                     __ptext3:	
   726 ;; *************** function _PORTC_write *****************
   727 ;; Defined at:
   728 ;;		line 39 in file "teclado_matricial_4x3.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  i               2    0[COMMON] int 
   731 ;;  v               2    2[COMMON] unsigned int 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1
   743 ;;      Params:         4       0       0
   744 ;;      Locals:         0       0       0
   745 ;;      Temps:          0       0       0
   746 ;;      Totals:         4       0       0
   747 ;;Total ram usage:        4 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_teclado_matricial_read
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _PORTC_write
   758  0691                     _PORTC_write:	
   759                           
   760                           ;teclado_matricial_4x3.c: 40: if(v > 1)
   761                           
   762                           ;incstack = 0
   763                           ; Regs used in _PORTC_write: [wreg-fsr0h+status,2+status,0]
   764  0691  3000               	movlw	0
   765  0692  0273               	subwf	PORTC_write@v+1,w
   766  0693  3002               	movlw	2
   767  0694  1903               	skipnz
   768  0695  0272               	subwf	PORTC_write@v,w
   769  0696  1803               	btfsc	3,0
   770  0697  0008               	return
   771  0698  2ED9               	goto	l914
   772  0699                     l896:	
   773                           ;teclado_matricial_4x3.c: 43: case 0:
   774                           
   775                           ;teclado_matricial_4x3.c: 42: switch(i){
   776                           
   777                           ;teclado_matricial_4x3.c: 41: return;
   778                           
   779                           
   780                           ;teclado_matricial_4x3.c: 44: PORTCbits.RC0 = v;
   781  0699  0C72               	rrf	PORTC_write@v,w
   782  069A  1283               	bcf	3,5	;RP0=0, select bank0
   783  069B  1303               	bcf	3,6	;RP1=0, select bank0
   784  069C  1C03               	skipc
   785  069D  1007               	bcf	7,0	;volatile
   786  069E  1803               	skipnc
   787  069F  1407               	bsf	7,0	;volatile
   788                           
   789                           ;teclado_matricial_4x3.c: 45: break;
   790  06A0  0008               	return
   791  06A1                     l898:	
   792                           ;teclado_matricial_4x3.c: 46: case 1:
   793                           
   794                           
   795                           ;teclado_matricial_4x3.c: 47: PORTCbits.RC1 = v;
   796  06A1  0C72               	rrf	PORTC_write@v,w
   797  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   798  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   799  06A4  1C03               	skipc
   800  06A5  1087               	bcf	7,1	;volatile
   801  06A6  1803               	skipnc
   802  06A7  1487               	bsf	7,1	;volatile
   803                           
   804                           ;teclado_matricial_4x3.c: 48: break;
   805  06A8  0008               	return
   806  06A9                     l900:	
   807                           ;teclado_matricial_4x3.c: 49: case 2:
   808                           
   809                           
   810                           ;teclado_matricial_4x3.c: 50: PORTCbits.RC2 = v;
   811  06A9  0C72               	rrf	PORTC_write@v,w
   812  06AA  1283               	bcf	3,5	;RP0=0, select bank0
   813  06AB  1303               	bcf	3,6	;RP1=0, select bank0
   814  06AC  1C03               	skipc
   815  06AD  1107               	bcf	7,2	;volatile
   816  06AE  1803               	skipnc
   817  06AF  1507               	bsf	7,2	;volatile
   818                           
   819                           ;teclado_matricial_4x3.c: 51: break;
   820  06B0  0008               	return
   821  06B1                     l902:	
   822                           ;teclado_matricial_4x3.c: 52: case 3:
   823                           
   824                           
   825                           ;teclado_matricial_4x3.c: 53: PORTCbits.RC3 = v;
   826  06B1  0C72               	rrf	PORTC_write@v,w
   827  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   828  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   829  06B4  1C03               	skipc
   830  06B5  1187               	bcf	7,3	;volatile
   831  06B6  1803               	skipnc
   832  06B7  1587               	bsf	7,3	;volatile
   833                           
   834                           ;teclado_matricial_4x3.c: 54: break;
   835  06B8  0008               	return
   836  06B9                     l904:	
   837                           ;teclado_matricial_4x3.c: 55: case 4:
   838                           
   839                           
   840                           ;teclado_matricial_4x3.c: 56: PORTCbits.RC4 = v;
   841  06B9  0C72               	rrf	PORTC_write@v,w
   842  06BA  1283               	bcf	3,5	;RP0=0, select bank0
   843  06BB  1303               	bcf	3,6	;RP1=0, select bank0
   844  06BC  1C03               	skipc
   845  06BD  1207               	bcf	7,4	;volatile
   846  06BE  1803               	skipnc
   847  06BF  1607               	bsf	7,4	;volatile
   848                           
   849                           ;teclado_matricial_4x3.c: 57: break;
   850  06C0  0008               	return
   851  06C1                     l906:	
   852                           ;teclado_matricial_4x3.c: 58: case 5:
   853                           
   854                           
   855                           ;teclado_matricial_4x3.c: 59: PORTCbits.RC5 = v;
   856  06C1  0C72               	rrf	PORTC_write@v,w
   857  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   858  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   859  06C4  1C03               	skipc
   860  06C5  1287               	bcf	7,5	;volatile
   861  06C6  1803               	skipnc
   862  06C7  1687               	bsf	7,5	;volatile
   863                           
   864                           ;teclado_matricial_4x3.c: 60: break;
   865  06C8  0008               	return
   866  06C9                     l908:	
   867                           ;teclado_matricial_4x3.c: 61: case 6:
   868                           
   869                           
   870                           ;teclado_matricial_4x3.c: 62: PORTCbits.RC6 = v;
   871  06C9  0C72               	rrf	PORTC_write@v,w
   872  06CA  1283               	bcf	3,5	;RP0=0, select bank0
   873  06CB  1303               	bcf	3,6	;RP1=0, select bank0
   874  06CC  1C03               	skipc
   875  06CD  1307               	bcf	7,6	;volatile
   876  06CE  1803               	skipnc
   877  06CF  1707               	bsf	7,6	;volatile
   878                           
   879                           ;teclado_matricial_4x3.c: 63: break;
   880  06D0  0008               	return
   881  06D1                     l910:	
   882                           ;teclado_matricial_4x3.c: 64: case 7:
   883                           
   884                           
   885                           ;teclado_matricial_4x3.c: 65: PORTCbits.RC7 = v;
   886  06D1  0C72               	rrf	PORTC_write@v,w
   887  06D2  1283               	bcf	3,5	;RP0=0, select bank0
   888  06D3  1303               	bcf	3,6	;RP1=0, select bank0
   889  06D4  1C03               	skipc
   890  06D5  1387               	bcf	7,7	;volatile
   891  06D6  1803               	skipnc
   892  06D7  1787               	bsf	7,7	;volatile
   893                           
   894                           ;teclado_matricial_4x3.c: 69: }
   895                           
   896                           ;teclado_matricial_4x3.c: 68: return;
   897                           
   898                           ;teclado_matricial_4x3.c: 67: default:
   899                           
   900                           ;teclado_matricial_4x3.c: 66: break;
   901  06D8  0008               	return
   902  06D9                     l914:	
   903                           
   904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   905                           ; Switch size 1, requested type "space"
   906                           ; Number of cases is 1, Range of values is 0 to 0
   907                           ; switch strategies available:
   908                           ; Name         Instructions Cycles
   909                           ; simple_byte            4     3 (average)
   910                           ; direct_byte            7     6 (fixed)
   911                           ; jumptable            260     6 (fixed)
   912                           ;	Chosen strategy is simple_byte
   913  06D9  0871               	movf	PORTC_write@i+1,w
   914  06DA  3A00               	xorlw	0	; case 0
   915  06DB  1903               	skipnz
   916  06DC  2EDE               	goto	l1140
   917  06DD  2EE9               	goto	l61
   918  06DE                     l1140:	
   919                           
   920                           ; Switch size 1, requested type "space"
   921                           ; Number of cases is 8, Range of values is 0 to 7
   922                           ; switch strategies available:
   923                           ; Name         Instructions Cycles
   924                           ; direct_byte           14     6 (fixed)
   925                           ; simple_byte           25    13 (average)
   926                           ; jumptable            260     6 (fixed)
   927                           ;	Chosen strategy is direct_byte
   928  06DE  0870               	movf	PORTC_write@i,w
   929  06DF  0084               	movwf	4
   930  06E0  3008               	movlw	8
   931  06E1  0204               	subwf	4,w
   932  06E2  1803               	skipnc
   933  06E3  0008               	return
   934  06E4  3000               	movlw	high S1142
   935  06E5  008A               	movwf	10
   936  06E6  300B               	movlw	low S1142
   937  06E7  0704               	addwf	4,w
   938  06E8  0082               	movwf	2
   939  06E9                     l61:	
   940                           ;teclado_matricial_4x3.c: 70: return;
   941                           
   942  06E9  0008               	return
   943  06EA                     __end_of_PORTC_write:	
   944                           
   945                           	psect	swtext1
   946  000B                     __pswtext1:	
   947  000B                     S1142:	
   948  000B  2E99               	ljmp	l896
   949  000C  2EA1               	ljmp	l898
   950  000D  2EA9               	ljmp	l900
   951  000E  2EB1               	ljmp	l902
   952  000F  2EB9               	ljmp	l904
   953  0010  2EC1               	ljmp	l906
   954  0011  2EC9               	ljmp	l908
   955  0012  2ED1               	ljmp	l910
   956                           
   957                           	psect	text4
   958  06EA                     __ptext4:	
   959 ;; *************** function _PORTC_read *****************
   960 ;; Defined at:
   961 ;;		line 16 in file "teclado_matricial_4x3.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  i               2    0[COMMON] int 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  2    0[COMMON] unsigned int 
   968 ;; Registers used:
   969 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1
   975 ;;      Params:         2       0       0
   976 ;;      Locals:         0       0       0
   977 ;;      Temps:          3       0       0
   978 ;;      Totals:         5       0       0
   979 ;;Total ram usage:        5 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_teclado_matricial_read
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           
   989                           ;psect for function _PORTC_read
   990  06EA                     _PORTC_read:	
   991                           
   992                           ;teclado_matricial_4x3.c: 17: switch(i){
   993                           
   994                           ;incstack = 0
   995                           ; Regs used in _PORTC_read: [wreg-fsr0h+status,2+status,0]
   996  06EA  2F51               	goto	l882
   997  06EB                     l844:	
   998                           ;teclado_matricial_4x3.c: 18: case 0:
   999                           
  1000                           
  1001                           ;teclado_matricial_4x3.c: 19: return PORTCbits.RC0;
  1002  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1003  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1004  06ED  0807               	movf	7,w	;volatile
  1005  06EE  3901               	andlw	1
  1006  06EF  00F2               	movwf	??_PORTC_read
  1007  06F0  01F3               	clrf	??_PORTC_read+1
  1008  06F1  0872               	movf	??_PORTC_read,w
  1009  06F2  00F0               	movwf	?_PORTC_read
  1010  06F3  0873               	movf	??_PORTC_read+1,w
  1011  06F4  00F1               	movwf	?_PORTC_read+1
  1012  06F5  0008               	return
  1013  06F6                     l848:	
  1014                           ;teclado_matricial_4x3.c: 20: case 1:
  1015                           
  1016                           
  1017                           ;teclado_matricial_4x3.c: 21: return PORTCbits.RC1;
  1018  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1019  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1020  06F8  0C07               	rrf	7,w	;volatile
  1021  06F9  3901               	andlw	1
  1022  06FA  00F2               	movwf	??_PORTC_read
  1023  06FB  01F3               	clrf	??_PORTC_read+1
  1024  06FC  0872               	movf	??_PORTC_read,w
  1025  06FD  00F0               	movwf	?_PORTC_read
  1026  06FE  0873               	movf	??_PORTC_read+1,w
  1027  06FF  00F1               	movwf	?_PORTC_read+1
  1028  0700  0008               	return
  1029  0701                     l852:	
  1030                           ;teclado_matricial_4x3.c: 22: case 2:
  1031                           
  1032                           
  1033                           ;teclado_matricial_4x3.c: 23: return PORTCbits.RC2;
  1034  0701  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0702  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0703  0C07               	rrf	7,w	;volatile
  1037  0704  00F2               	movwf	??_PORTC_read
  1038  0705  0C72               	rrf	??_PORTC_read,w
  1039  0706  3901               	andlw	1
  1040  0707  00F3               	movwf	??_PORTC_read+1
  1041  0708  01F4               	clrf	??_PORTC_read+2
  1042  0709  0873               	movf	??_PORTC_read+1,w
  1043  070A  00F0               	movwf	?_PORTC_read
  1044  070B  0874               	movf	??_PORTC_read+2,w
  1045  070C  00F1               	movwf	?_PORTC_read+1
  1046  070D  0008               	return
  1047  070E                     l856:	
  1048                           ;teclado_matricial_4x3.c: 24: case 3:
  1049                           
  1050                           
  1051                           ;teclado_matricial_4x3.c: 25: return PORTCbits.RC3;
  1052  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1053  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0710  0C07               	rrf	7,w	;volatile
  1055  0711  00F2               	movwf	??_PORTC_read
  1056  0712  0CF2               	rrf	??_PORTC_read,f
  1057  0713  0C72               	rrf	??_PORTC_read,w
  1058  0714  3901               	andlw	1
  1059  0715  00F3               	movwf	??_PORTC_read+1
  1060  0716  01F4               	clrf	??_PORTC_read+2
  1061  0717  0873               	movf	??_PORTC_read+1,w
  1062  0718  00F0               	movwf	?_PORTC_read
  1063  0719  0874               	movf	??_PORTC_read+2,w
  1064  071A  00F1               	movwf	?_PORTC_read+1
  1065  071B  0008               	return
  1066  071C                     l860:	
  1067                           ;teclado_matricial_4x3.c: 26: case 4:
  1068                           
  1069                           
  1070                           ;teclado_matricial_4x3.c: 27: return PORTCbits.RC4;
  1071  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1072  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1073  071E  0E07               	swapf	7,w	;volatile
  1074  071F  3901               	andlw	1
  1075  0720  00F2               	movwf	??_PORTC_read
  1076  0721  01F3               	clrf	??_PORTC_read+1
  1077  0722  0872               	movf	??_PORTC_read,w
  1078  0723  00F0               	movwf	?_PORTC_read
  1079  0724  0873               	movf	??_PORTC_read+1,w
  1080  0725  00F1               	movwf	?_PORTC_read+1
  1081  0726  0008               	return
  1082  0727                     l864:	
  1083                           ;teclado_matricial_4x3.c: 28: case 5:
  1084                           
  1085                           
  1086                           ;teclado_matricial_4x3.c: 29: return PORTCbits.RC5;
  1087  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0729  0E07               	swapf	7,w	;volatile
  1090  072A  00F2               	movwf	??_PORTC_read
  1091  072B  0C72               	rrf	??_PORTC_read,w
  1092  072C  3901               	andlw	1
  1093  072D  00F3               	movwf	??_PORTC_read+1
  1094  072E  01F4               	clrf	??_PORTC_read+2
  1095  072F  0873               	movf	??_PORTC_read+1,w
  1096  0730  00F0               	movwf	?_PORTC_read
  1097  0731  0874               	movf	??_PORTC_read+2,w
  1098  0732  00F1               	movwf	?_PORTC_read+1
  1099  0733  0008               	return
  1100  0734                     l868:	
  1101                           ;teclado_matricial_4x3.c: 30: case 6:
  1102                           
  1103                           
  1104                           ;teclado_matricial_4x3.c: 31: return PORTCbits.RC6;
  1105  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0736  0E07               	swapf	7,w	;volatile
  1108  0737  00F2               	movwf	??_PORTC_read
  1109  0738  0CF2               	rrf	??_PORTC_read,f
  1110  0739  0C72               	rrf	??_PORTC_read,w
  1111  073A  3901               	andlw	1
  1112  073B  00F3               	movwf	??_PORTC_read+1
  1113  073C  01F4               	clrf	??_PORTC_read+2
  1114  073D  0873               	movf	??_PORTC_read+1,w
  1115  073E  00F0               	movwf	?_PORTC_read
  1116  073F  0874               	movf	??_PORTC_read+2,w
  1117  0740  00F1               	movwf	?_PORTC_read+1
  1118  0741  0008               	return
  1119  0742                     l872:	
  1120                           ;teclado_matricial_4x3.c: 32: case 7:
  1121                           
  1122                           
  1123                           ;teclado_matricial_4x3.c: 33: return PORTCbits.RC7;
  1124  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0744  0D07               	rlf	7,w	;volatile
  1127  0745  0D07               	rlf	7,w	;volatile
  1128  0746  3901               	andlw	1
  1129  0747  00F2               	movwf	??_PORTC_read
  1130  0748  01F3               	clrf	??_PORTC_read+1
  1131  0749  0872               	movf	??_PORTC_read,w
  1132  074A  00F0               	movwf	?_PORTC_read
  1133  074B  0873               	movf	??_PORTC_read+1,w
  1134  074C  00F1               	movwf	?_PORTC_read+1
  1135  074D  0008               	return
  1136  074E                     l876:	
  1137                           ;teclado_matricial_4x3.c: 34: default:
  1138                           
  1139                           
  1140                           ;teclado_matricial_4x3.c: 35: return 0;
  1141  074E  01F0               	clrf	?_PORTC_read
  1142  074F  01F1               	clrf	?_PORTC_read+1
  1143                           
  1144                           ;teclado_matricial_4x3.c: 36: }
  1145  0750  0008               	return
  1146  0751                     l882:	
  1147                           
  1148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1149                           ; Switch size 1, requested type "space"
  1150                           ; Number of cases is 1, Range of values is 0 to 0
  1151                           ; switch strategies available:
  1152                           ; Name         Instructions Cycles
  1153                           ; simple_byte            4     3 (average)
  1154                           ; direct_byte            7     6 (fixed)
  1155                           ; jumptable            260     6 (fixed)
  1156                           ;	Chosen strategy is simple_byte
  1157  0751  0871               	movf	PORTC_read@i+1,w
  1158  0752  3A00               	xorlw	0	; case 0
  1159  0753  1903               	skipnz
  1160  0754  2F56               	goto	l1144
  1161  0755  2F4E               	goto	l876
  1162  0756                     l1144:	
  1163                           
  1164                           ; Switch size 1, requested type "space"
  1165                           ; Number of cases is 8, Range of values is 0 to 7
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; direct_byte           14     6 (fixed)
  1169                           ; simple_byte           25    13 (average)
  1170                           ; jumptable            260     6 (fixed)
  1171                           ;	Chosen strategy is direct_byte
  1172  0756  0870               	movf	PORTC_read@i,w
  1173  0757  0084               	movwf	4
  1174  0758  3008               	movlw	8
  1175  0759  0204               	subwf	4,w
  1176  075A  1803               	skipnc
  1177  075B  2F4E               	goto	l876
  1178  075C  3000               	movlw	high S1146
  1179  075D  008A               	movwf	10
  1180  075E  3013               	movlw	low S1146
  1181  075F  0704               	addwf	4,w
  1182  0760  0082               	movwf	2
  1183  0761  0008               	return
  1184  0762                     __end_of_PORTC_read:	
  1185                           
  1186                           	psect	swtext2
  1187  0013                     __pswtext2:	
  1188  0013                     S1146:	
  1189  0013  2EEB               	ljmp	l844
  1190  0014  2EF6               	ljmp	l848
  1191  0015  2F01               	ljmp	l852
  1192  0016  2F0E               	ljmp	l856
  1193  0017  2F1C               	ljmp	l860
  1194  0018  2F27               	ljmp	l864
  1195  0019  2F34               	ljmp	l868
  1196  001A  2F42               	ljmp	l872
  1197                           
  1198                           	psect	text5
  1199  0657                     __ptext5:	
  1200 ;; *************** function _print_7_seg *****************
  1201 ;; Defined at:
  1202 ;;		line 9 in file "display7segmentos.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  i               2    0[COMMON] int 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1
  1216 ;;      Params:         2       0       0
  1217 ;;      Locals:         0       0       0
  1218 ;;      Temps:          0       0       0
  1219 ;;      Totals:         2       0       0
  1220 ;;Total ram usage:        2 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _print_7_seg
  1231  0657                     _print_7_seg:	
  1232                           
  1233                           ;display7segmentos.c: 11: TRISB = 0x00;
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in _print_7_seg: [wreg-fsr0h+status,2+status,0]
  1237  0657  1683               	bsf	3,5	;RP0=1, select bank1
  1238  0658  1303               	bcf	3,6	;RP1=0, select bank1
  1239  0659  0186               	clrf	6	;volatile
  1240                           
  1241                           ;display7segmentos.c: 12: PORTB = 0xFF;
  1242  065A  30FF               	movlw	255
  1243  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1244  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1245  065D  0086               	movwf	6	;volatile
  1246                           
  1247                           ;display7segmentos.c: 14: switch(i){
  1248  065E  2E80               	goto	l964
  1249  065F                     l942:	
  1250                           ;display7segmentos.c: 15: case 0:
  1251                           
  1252                           
  1253                           ;display7segmentos.c: 16: PORTB = 0b11000000;
  1254  065F  30C0               	movlw	192
  1255  0660  0086               	movwf	6	;volatile
  1256                           
  1257                           ;display7segmentos.c: 17: break;
  1258  0661  0008               	return
  1259  0662                     l944:	
  1260                           ;display7segmentos.c: 18: case 1:
  1261                           
  1262                           
  1263                           ;display7segmentos.c: 19: PORTB = 0b11111001;
  1264  0662  30F9               	movlw	249
  1265  0663  0086               	movwf	6	;volatile
  1266                           
  1267                           ;display7segmentos.c: 20: break;
  1268  0664  0008               	return
  1269  0665                     l946:	
  1270                           ;display7segmentos.c: 21: case 2:
  1271                           
  1272                           
  1273                           ;display7segmentos.c: 22: PORTB = 0b10100100;
  1274  0665  30A4               	movlw	164
  1275  0666  0086               	movwf	6	;volatile
  1276                           
  1277                           ;display7segmentos.c: 23: break;
  1278  0667  0008               	return
  1279  0668                     l948:	
  1280                           ;display7segmentos.c: 24: case 3:
  1281                           
  1282                           
  1283                           ;display7segmentos.c: 25: PORTB = 0b10110000;
  1284  0668  30B0               	movlw	176
  1285  0669  0086               	movwf	6	;volatile
  1286                           
  1287                           ;display7segmentos.c: 26: break;
  1288  066A  0008               	return
  1289  066B                     l950:	
  1290                           ;display7segmentos.c: 27: case 4:
  1291                           
  1292                           
  1293                           ;display7segmentos.c: 28: PORTB = 0b10011001;
  1294  066B  3099               	movlw	153
  1295  066C  0086               	movwf	6	;volatile
  1296                           
  1297                           ;display7segmentos.c: 29: break;
  1298  066D  0008               	return
  1299  066E                     l952:	
  1300                           ;display7segmentos.c: 30: case 5:
  1301                           
  1302                           
  1303                           ;display7segmentos.c: 31: PORTB = 0b10010010;
  1304  066E  3092               	movlw	146
  1305  066F  0086               	movwf	6	;volatile
  1306                           
  1307                           ;display7segmentos.c: 32: break;
  1308  0670  0008               	return
  1309  0671                     l954:	
  1310                           ;display7segmentos.c: 33: case 6:
  1311                           
  1312                           
  1313                           ;display7segmentos.c: 34: PORTB = 0b10000010;
  1314  0671  3082               	movlw	130
  1315  0672  0086               	movwf	6	;volatile
  1316                           
  1317                           ;display7segmentos.c: 35: break;
  1318  0673  0008               	return
  1319  0674                     l956:	
  1320                           ;display7segmentos.c: 36: case 7:
  1321                           
  1322                           
  1323                           ;display7segmentos.c: 37: PORTB = 0b11111000;
  1324  0674  30F8               	movlw	248
  1325  0675  0086               	movwf	6	;volatile
  1326                           
  1327                           ;display7segmentos.c: 38: break;
  1328  0676  0008               	return
  1329  0677                     l958:	
  1330                           ;display7segmentos.c: 39: case 8:
  1331                           
  1332                           
  1333                           ;display7segmentos.c: 40: PORTB = 0b10000000;
  1334  0677  3080               	movlw	128
  1335  0678  0086               	movwf	6	;volatile
  1336                           
  1337                           ;display7segmentos.c: 41: break;
  1338  0679  0008               	return
  1339  067A                     l960:	
  1340                           ;display7segmentos.c: 42: case 9:
  1341                           
  1342                           
  1343                           ;display7segmentos.c: 43: PORTB = 0b10010000;
  1344  067A  3090               	movlw	144
  1345  067B  0086               	movwf	6	;volatile
  1346                           
  1347                           ;display7segmentos.c: 44: break;
  1348  067C  0008               	return
  1349  067D                     l962:	
  1350                           ;display7segmentos.c: 45: default:
  1351                           
  1352                           
  1353                           ;display7segmentos.c: 46: PORTB = 0b11111111;
  1354  067D  30FF               	movlw	255
  1355  067E  0086               	movwf	6	;volatile
  1356                           
  1357                           ;display7segmentos.c: 47: }
  1358  067F  0008               	return
  1359  0680                     l964:	
  1360                           
  1361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1362                           ; Switch size 1, requested type "space"
  1363                           ; Number of cases is 1, Range of values is 0 to 0
  1364                           ; switch strategies available:
  1365                           ; Name         Instructions Cycles
  1366                           ; simple_byte            4     3 (average)
  1367                           ; direct_byte            7     6 (fixed)
  1368                           ; jumptable            260     6 (fixed)
  1369                           ;	Chosen strategy is simple_byte
  1370  0680  0871               	movf	print_7_seg@i+1,w
  1371  0681  3A00               	xorlw	0	; case 0
  1372  0682  1903               	skipnz
  1373  0683  2E85               	goto	l1148
  1374  0684  2E7D               	goto	l962
  1375  0685                     l1148:	
  1376                           
  1377                           ; Switch size 1, requested type "space"
  1378                           ; Number of cases is 10, Range of values is 0 to 9
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; direct_byte           16     6 (fixed)
  1382                           ; simple_byte           31    16 (average)
  1383                           ; jumptable            260     6 (fixed)
  1384                           ;	Chosen strategy is direct_byte
  1385  0685  0870               	movf	print_7_seg@i,w
  1386  0686  0084               	movwf	4
  1387  0687  300A               	movlw	10
  1388  0688  0204               	subwf	4,w
  1389  0689  1803               	skipnc
  1390  068A  2E7D               	goto	l962
  1391  068B  3000               	movlw	high S1150
  1392  068C  008A               	movwf	10
  1393  068D  3001               	movlw	low S1150
  1394  068E  0704               	addwf	4,w
  1395  068F  0082               	movwf	2
  1396  0690  0008               	return
  1397  0691                     __end_of_print_7_seg:	
  1398  007E                     btemp	set	126	;btemp
  1399  007E                     wtemp0	set	126
  1400                           
  1401                           	psect	swtext3
  1402  0001                     __pswtext3:	
  1403  0001                     S1150:	
  1404  0001  2E5F               	ljmp	l942
  1405  0002  2E62               	ljmp	l944
  1406  0003  2E65               	ljmp	l946
  1407  0004  2E68               	ljmp	l948
  1408  0005  2E6B               	ljmp	l950
  1409  0006  2E6E               	ljmp	l952
  1410  0007  2E71               	ljmp	l954
  1411  0008  2E74               	ljmp	l956
  1412  0009  2E77               	ljmp	l958
  1413  000A  2E7A               	ljmp	l960


Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2      26
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_teclado_matricial_read
    _teclado_matricial_read->_PORTC_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1227
                                              0 BANK0      2     2      0
                        _print_7_seg
             _teclado_matricial_read
 ---------------------------------------------------------------------------------
 (1) _teclado_matricial_read                               9     7      2    1032
                                              5 COMMON     9     7      2
                         _PORTC_read
                        _PORTC_write
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _PORTC_write                                          4     0      4     604
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _PORTC_read                                           5     3      2      86
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _print_7_seg                                          2     0      2     150
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _print_7_seg
   _teclado_matricial_read
     _PORTC_read
     _PORTC_write
     ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28       8        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 07 13:02:02 2018

                              pc 0002                     print_7_seg@i 0070          teclado_matricial_read@i 007C  
        teclado_matricial_read@j 007A                   ___bmul@product 0072                      __CFG_CP$OFF 0000  
                             l61 06E9                               fsr 0004                              l900 06A9  
                            l910 06D1                              l902 06B1                              l904 06B9  
                            l906 06C1                              l914 06D9                              l930 0621  
                            l860 071C                              l852 0701                              l844 06EB  
                            l908 06C9                              l950 066B                              l942 065F  
                            l926 061B                              l960 067A                              l952 066E  
                            l944 0662                              l872 0742                              l864 0727  
                            l856 070E                              l848 06F6                              l962 067D  
                            l954 0671                              l946 0665                              l882 0751  
                            l956 0674                              l948 0668                              l964 0680  
                            l876 074E                              l868 0734                              l958 0677  
                            l982 0773                              l896 0699                              l992 0796  
                            l898 06A1                              l998 07C5                              u217 0779  
                            u145 0771                              u155 0794                              u175 07AE  
                            u185 07D4                     __CFG_CPD$OFF 0000                              u195 07ED  
                            fsr0 0004                              indf 0000                     __CFG_FOSC$HS 0000  
                           S1150 0001                             S1142 000B                             S1146 0013  
                   __CFG_LVP$OFF 0000                             l1002 07D6                             l1014 062E  
                           l1008 07EF                             l1140 06DE                             l1144 0756  
                           l1148 0685                     __CFG_WRT$OFF 0000                             _main 062A  
                           btemp 007E                    __CFG_BOREN$ON 0000                             start 0000  
              ___bmul@multiplier 0073                            ?_main 0070                    __CFG_WDTE$OFF 0000  
                          _PORTB 0006                            _TRISB 0086                            _TRISC 0087  
                    ?_PORTC_read 0070                            main@i 0038                            pclath 000A  
                          status 0003                            wtemp0 007E         ??_teclado_matricial_read 0077  
                __initialization 07F4                     __end_of_main 063F                           ??_main 007E  
                 __CFG_PWRTE$OFF 0000                           ___bmul 0619              __size_of_PORTC_read 0078  
                   ?_PORTC_write 0070                           _matriz 0020                     ?_print_7_seg 0070  
        __end_of__initialization 07FE              ___bmul@multiplicand 0070  __size_of_teclado_matricial_read 0092  
                 __pcstackCOMMON 0070                     __pidataBANK0 063F                       __pmaintext 062A  
                        ?___bmul 0070           _teclado_matricial_read 0762                     ??_PORTC_read 0072  
                __size_of___bmul 0011               __end_of_PORTC_read 0762                          __ptext1 0762  
                        __ptext2 0619                          __ptext3 0691                          __ptext4 06EA  
                        __ptext5 0657             __size_of_PORTC_write 0059             end_of_initialization 07FE  
           __size_of_print_7_seg 003A                      PORTC_read@i 0070                        _PORTCbits 0007  
                 __end_of___bmul 062A              start_initialization 07F4                         ??___bmul 0071  
                     init_fetch0 060A                      __pdataBANK0 0020          ?_teclado_matricial_read 0075  
                      ___latbits 0000                    __pcstackBANK0 0038   __end_of_teclado_matricial_read 07F4  
                      __pswtext1 000B                        __pswtext2 0013                        __pswtext3 0001  
                  ??_PORTC_write 0074                    ??_print_7_seg 0072              __end_of_PORTC_write 06EA  
            __end_of_print_7_seg 0691                    __size_of_main 0015                         init_ram0 060E  
                   PORTC_write@i 0070                     PORTC_write@v 0072                      _PORTC_write 0691  
                    _print_7_seg 0657                       _PORTC_read 06EA  
